from machine import Pin, UART
import gc
import utime
import time

print("hi")
led = Pin(33, Pin.OUT)  # Changed to Pin.OUT for controlling LED status
gc.collect()

# GPS Module Setup
gpsModule = UART(2, baudrate=9600)  # UART for GPS communication

print(gpsModule)

TIMEOUT = False
FIX_STATUS = False

latitude = ""
longitude = ""
satellites = ""
GPStime = ""

# GPS Parsing Function
def getGPS(gpsModule):
    global FIX_STATUS, TIMEOUT, latitude, longitude, satellites, GPStime
    
    timeout = time.time() + 5  # Timeout after 5 seconds
    while True:
        line = gpsModule.readline()
        if line:
            buff = str(line)
            parts = buff.split(',')
            
            if parts[0] == "b'$GPGGA" and len(parts) == 15:  # Check for valid GPS sentence
                if all(parts[1:8]):  # Ensure necessary parts are present
                    print(buff)
                    latitude = convertToDegree(parts[2])
                    if parts[3] == 'S':
                        latitude = -latitude
                    longitude = convertToDegree(parts[4])
                    if parts[5] == 'W':
                        longitude = -longitude
                    satellites = parts[7]
                    GPStime = parts[1][0:2] + ":" + parts[1][2:4] + ":" + parts[1][4:6]
                    message = f"https://www.google.com/maps?q={latitude},{longitude}&z=17&hl=en"
                    print(message)
                    FIX_STATUS = True
                    break
        if time.time() > timeout:
            TIMEOUT = True
            break
        utime.sleep_ms(10)

# Convert GPS coordinates to degrees
def convertToDegree(RawDegrees):
    RawAsFloat = float(RawDegrees)
    firstdigits = int(RawAsFloat / 100) 
    nexttwodigits = RawAsFloat - float(firstdigits * 100)
    
    Converted = float(firstdigits + nexttwodigits / 60.0)
    Converted = '{0:.6f}'.format(Converted) 
    return str(Converted)

# Main Loop
while True:
    led.on()  # Turn LED on to indicate the loop is running
    
    getGPS(gpsModule)  # Get the GPS data
    
    print("working")

    if FIX_STATUS:
        print("Printing GPS data...")
        print("Latitude: " + latitude)
        print("Longitude: " + longitude)
        print("Satellites: " + satellites)
        print("Time: " + GPStime)
        print("----------------------")
        
        FIX_STATUS = False  # Reset the fix status for the next iteration
    else:
        print("No GPS data is found.")
        TIMEOUT = False  # Reset the timeout flag

    utime.sleep(1)  # Optional: Pause for 1 second between cycles to avoid overload

