import network
from machine import UART
import urequests
import time
try:
    from bps_cre import *     
except:
    pass

# Adafruit IO Credentials
AIO_USERNAME = ADAFRUIT_AIO_USERNAME
AIO_KEY = ADAFRUIT_AIO_KEY 
AIO_FEED = "location-alert"  # Feed name created in Adafruit IO

# Wi-Fi Credentials
SSID = bps_ssid
PASSWORD = bps_passw

# GPS UART Configuration
gpsModule = UART(1, baudrate=9600, tx=16, rx=17)  # Adjust pins if needed

# Connect to Wi-Fi
def connect_wifi():
    wlan = network.WLAN(network.STA_IF)
    wlan.active(True)
    wlan.connect(SSID, PASSWORD)
    while not wlan.isconnected():
        pass
    print('Connected to WiFi:', wlan.ifconfig())

# Parse GPS Data
def get_gps_data():
    while True:
        line = gpsModule.readline()
        if line:
            try:
                data = line.decode("utf-8").strip()
                parts = data.split(',')
                if parts[0] == "$GPGGA" and len(parts) >= 7:
                    latitude = convert_to_degrees(parts[2], parts[3])
                    longitude = convert_to_degrees(parts[4], parts[5])
                    return latitude, longitude
            except Exception as e:
                print("Error parsing GPS data:", e)
        time.sleep(1)

def convert_to_degrees(raw, direction):
    if not raw:
        return None
    degrees = float(raw[:2])
    minutes = float(raw[2:]) / 60.0
    result = degrees + minutes
    if direction == "S" or direction == "W":
        result = -result
    return round(result, 6)

# Send data to Adafruit IO
def send_to_adafruit(latitude, longitude):
    url = f"https://io.adafruit.com/api/v2/{AIO_USERNAME}/feeds/{AIO_FEED}/data"
    headers = {
        "Content-Type": "application/json",
        "X-AIO-Key": AIO_KEY
    }
    payload = {
        "value": {"lat": latitude, "lon": longitude}
    }
    response = urequests.post(url, json=payload, headers=headers)
    if response.status_code == 200:
        print("Data sent to Adafruit IO")
    else:
        print("Failed to send data:", response.text)
    response.close()

# Main Function
def main():
    connect_wifi()
    while True:
        latitude, longitude = get_gps_data()
        if latitude and longitude:
            print(f"Latitude: {latitude}, Longitude: {longitude}")
            send_to_adafruit(latitude, longitude)
        time.sleep(10)

if __name__ == "__main__":
    main()
